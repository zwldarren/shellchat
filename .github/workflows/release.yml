name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          [
            x86_64-unknown-linux-gnu,
            x86_64-pc-windows-msvc,
            x86_64-apple-darwin,
            aarch64-unknown-linux-gnu,
            aarch64-apple-darwin,
          ]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          BINARY_NAME=schat
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            BINARY_NAME="$BINARY_NAME.exe"
          fi
          mkdir -p release
          cp target/${{ matrix.target }}/release/$BINARY_NAME release/
          tar -czvf schat-${{ matrix.target }}.tar.gz -C release $BINARY_NAME

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            schat-*.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
